Prompt to generate a service based website

Create a new folder
CD into that folder
Add these mcps:

Prompt 1: 
make the webite luxious and modern.


<service_information>

we sell prescription lenses and designer frames 

</service_information>
make an appointment with us, we can work your eyes for a renewed life

<services>

Optician and eyewear services

<languages>
English
Thai
</languages>

<locations>

Bangkok, Thailand

</locations>
Bangkok, Thailand
<contact_details>

Just use placeholders for contact detaisl (only) for now

</contact_details>
TBA


Put this into claudeâ€™s memory

USE THIS COMMAND TO MAKE THE PROJECT

$env:CI="true"; npx create-next-app@14.2.23 name-of-project-2992 --tailwind --no-src --typescript --app --no-eslint --use-npm

You are a service website generator that uses docker to fix problems until the website runs fully without any issues, you also use the playwright MCP to read browser logs if an error isn't occurring client side but browser side - You make an individual new folder per project, I will give you the <services> <languages> etc, you just need to create the site with a docker instance to test - and when I tell you to, to send the code to a GitHub repo I will give you, and then set up the site on Digital Ocean using the Digital Ocean MCP - You have access to the GitHub CLI

The project must BUILD locally - you must successfully be able to run npm run build, and it builds, creates all the pages etc - this is essential, also add a sitemap for all the pages. 

To get images for all projects, follow the following workflow

curl "https://s.jina.ai/?q=Jina+AI" \
  -H "Authorization: Bearer jina_d4df6cc0cfbd4f598a41db31fcd8c8f7eddA1xUf25KgtbThBltyr16zvheN" \
  -H "X-Respond-With: no-content" \
  -H "X-Site: https://unsplash.com"

Then scrape 1 relevant page at a time, until you find a perfect image - avoid premium images, use r.jina to scrape the actual unsplash page then choose the perfect image for what you're looking for each time

curl "https://r.jina.ai/<replace-with-url-from-s.jina-search>" \
  -H "Authorization: Bearer jina_d4df6cc0cfbd4f598a41db31fcd8c8f7eddA1xUf25KgtbThBltyr16zvheN"

Do an insite search on unsplash, replacing the q= with a keyword that makes sense for what you're looking for, a

Create a new NextJS project -call it something that makes sense for the website niche, add some random numbers on the end, create all folders inside this current directory that you're in - Make the project on docker and make sure you can test everything yourself  - you can one shot this with this command - $env:CI="true"; npx create-next-app@14.2.23 service-site-2027 --tailwind --no-src --typescript --app --no-eslint --use-npm

I want to create a nextjs project, staticlly generated, you are already inside a fresh nextjs project and there are images inside a folder called /public/images/, it is a service based website, for a company that offer these services <services>, the website should be in <languages> and the website should be properly split with href language tags before the main slug of the url, for example example.com/fr/example/example. 



Use the images in an intelligent way to build a modern website with good coloring schemes and fonts and other elements which I will leave up to your discretion to plan and then implement a good, intelligent color and font and feel to it



Use <service\_information> to understand specifics of the business



For languages, ensure to implement the SEO and keywords etc for both languages, and not just one of the languages - Also URL slugs must be translated 



The company is offering these services in <locations>



The idea is to generate all possible pages, combining both <services> with <locations> to create location based SEO services.



For service + location pages try your best to create a modular (you can use svg icons to make this work) set up, with at least 5-7 different vertical unique blocks that add to the overall value of the page - this is important, because these are the pages we are truly trying to rank, and if they don't have enough good unique information on them, they won't rank. Ensure they are as varied as possible by using templates



Ensure the pages are split by service, so no two service landing page should look the same (even if the service + location page do look the same)



Make sure the colors are contrasting and not white on white or black on black at any point



The content of those pages should be landing pages for the service itself, created from a template that you have built, using the images, and the other information you know or can interpret from what you've been given.



Have a good looking contact us page with the <contact\_details> on it



Ensure to create a phenomenal modern homepage for the website using the images and information about services to make a modular, mobilefriendly (it must not scroll horizontally on mobile) homepage



<service\_information>

\[Business-specific information about services offered]

</service\_information>



<services>

\[List of services offered by the business]

</services>



<languages>

\[Target languages for the website]

</languages>



<locations>

\[Geographic areas where services are offered - can be regions, cities, provinces, etc.]

</locations>



<contact\_details>

\[Contact information for the business]

</contact\_details>



Use Next js 14.2.23 - these were my install settings:



Create icons and svgs as you're going - start with something simple



Do not use src directory



Implement ISR so the website can be built again quickly and easily



Use NextJS, and tailwind to make a unique beautiful modern modular website with 5-7 unique vertical blocks per page (more on the homepage)



Be very careful and wary of typescript errors



Make sure you are generatingStaticParams - and not confusing dynamic generation and static generation, 



Maximise build efficiency, speed, and complexity and modular nature of any pages which are generated for SEO



Ensure to implement all slugs etc programmatically, and never create an index page link without creating the index page itself



You must be as detailed as possible with your SEO, abusing the fact that Google is very likely to rank pages that have exact phrase matches to keywords, for example "What is the meaning and Origin of X name" for my baby name website, which helps me rank for that question across all of the names in my database (which is 88k names) with a total of 100k pages, you can see how index pages, and then individual pages of that page type can really start to create scale.


